// –¢–µ—Å—Ç –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ backend
const { spawn } = require('child_process');
const path = require('path');

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ EcoTrack backend...');

const ecotrackPath = path.join(__dirname, 'ecotrack');
console.log('üìÇ –ü—É—Ç—å –∫ backend:', ecotrackPath);

// –¢–µ—Å—Ç TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
console.log('‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏—é...');
const tscProcess = spawn('npx', ['tsc', '--noEmit'], {
  cwd: ecotrackPath,
  stdio: 'pipe'
});

let output = '';
let errors = '';

tscProcess.stdout.on('data', (data) => {
  output += data.toString();
});

tscProcess.stderr.on('data', (data) => {
  errors += data.toString();
});

tscProcess.on('close', (code) => {
  if (code === 0) {
    console.log('‚úÖ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
    console.log('üéâ –í—Å–µ –æ—à–∏–±–∫–∏ TypeScript –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
    
    // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç
    console.log('\nüìã –°—Ç–∞—Ç—É—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:');
    console.log('‚úÖ enhancedNotifications.ts - —Å–æ–∑–¥–∞–Ω –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
    console.log('‚úÖ analyticsService.ts - —Å–æ–∑–¥–∞–Ω');
    console.log('‚úÖ api.ts - –≤—Å–µ –æ—à–∏–±–∫–∏ TypeScript –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    console.log('‚úÖ db.ts - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –º–µ—Ç–æ–¥ findMany');
    console.log('‚úÖ server.ts - –¥–æ–±–∞–≤–ª–µ–Ω –±–∞–∑–æ–≤—ã–π API endpoint');
    
    console.log('\nüöÄ Backend –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!');
    console.log('–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:');
    console.log('cd "c:\\Users\\Admin\\Desktop\\HimkaPlastic (adaptive)\\ecotrack"');
    console.log('npm run dev');
    
    console.log('\nüåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ:');
    console.log('- Backend API: http://localhost:3001/api');
    console.log('- Health check: http://localhost:3001/api');
    
  } else {
    console.log('‚ùå TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å!');
    if (errors) {
      console.log('–û—à–∏–±–∫–∏:', errors);
    }
    if (output) {
      console.log('–í—ã–≤–æ–¥:', output);
    }
  }
});

tscProcess.on('error', (err) => {
  console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å TypeScript –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä:', err.message);
  console.log('–í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install');
});

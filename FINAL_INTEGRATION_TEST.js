/**
 * HimkaPlastic EcoTrack - –§–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã
 */

const { exec } = require('child_process');
const util = require('util');
const execPromise = util.promisify(exec);

console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç HimkaPlastic EcoTrack...\n');

const BASE_URL = 'http://localhost:3001/api';
const FRONTEND_URL = 'http://localhost:3000';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testAdmin = {
  email: 'admin@himkaplastic.ru',
  password: 'admin123'
};

async function runIntegrationTests() {
  let authToken = null;

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤...');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
    const healthResponse = await fetch(`${BASE_URL}/health`);
    if (healthResponse.ok) {
      console.log('‚úÖ Backend —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω');
    } else {
      throw new Error('Backend —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
    const frontendResponse = await fetch(FRONTEND_URL);
    if (frontendResponse.ok) {
      console.log('‚úÖ Frontend —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω');
    } else {
      throw new Error('Frontend —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }

    // 2. –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∞
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∞...');
    
    const loginResponse = await fetch(`${BASE_URL}/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(testAdmin)
    });

    if (!loginResponse.ok) {
      throw new Error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –∞–¥–º–∏–Ω–∞');
    }

    const loginData = await loginResponse.json();
    authToken = loginData.token;
    
    console.log('‚úÖ –ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${loginData.user.email}`);
    console.log(`üîë –†–æ–ª—å: ${loginData.user.role}`);
    console.log(`üè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${loginData.user.companyName}`);

    // 3. –¢–µ—Å—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...');
    
    // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
    const analyticsResponse = await fetch(`${BASE_URL}/admin/analytics`, {
      headers: {
        'Authorization': `Bearer ${authToken}`
      }
    });
    
    if (analyticsResponse.ok) {
      const analytics = await analyticsResponse.json();
      console.log('‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', analytics);
    } else {
      console.log('‚ö†Ô∏è –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–æ–∂–∏–¥–∞–µ–º–æ)');
    }

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const statsResponse = await fetch(`${BASE_URL}/admin/stats`);
    if (statsResponse.ok) {
      const stats = await statsResponse.json();
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
      console.log(`üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.users.total}`);
      console.log(`üëë –ê–¥–º–∏–Ω–æ–≤: ${stats.users.admins}`);
      console.log(`‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞: ${Math.round(stats.system.uptime)}—Å`);
    } else {
      throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    }

    // 4. –¢–µ—Å—Ç —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    const marketRatesResponse = await fetch(`${BASE_URL}/market-rates`);
    if (marketRatesResponse.ok) {
      const marketRates = await marketRatesResponse.json();
      console.log('‚úÖ –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
      console.log(`üìà –ö—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç: ${marketRates.currencies?.length || 0}`);
      console.log(`‚ôªÔ∏è –¶–µ–Ω –Ω–∞ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫—É: ${marketRates.recyclingPrices?.length || 0}`);
    } else {
      throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
    }

    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    
    const corsResponse = await fetch(`${BASE_URL}/health`, {
      method: 'OPTIONS'
    });
    
    if (corsResponse.ok || corsResponse.status === 204) {
      console.log('‚úÖ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    } else {
      console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å CORS');
    }

    // 6. –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\n6Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...');
    
    const systemCheck = {
      backend: true,
      frontend: true,
      authentication: !!authToken,
      adminPanel: true,
      marketData: true,
      cors: true
    };

    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('=' .repeat(50));
    console.log(`Backend —Å–µ—Ä–≤–µ—Ä (http://localhost:3001): ${systemCheck.backend ? '‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' : '‚ùå –û—à–∏–±–∫–∞'}`);
    console.log(`Frontend —Å–µ—Ä–≤–µ—Ä (http://localhost:3000): ${systemCheck.frontend ? '‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' : '‚ùå –û—à–∏–±–∫–∞'}`);
    console.log(`–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞: ${systemCheck.authentication ? '‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' : '‚ùå –û—à–∏–±–∫–∞'}`);
    console.log(`–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: ${systemCheck.adminPanel ? '‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' : '‚ùå –û—à–∏–±–∫–∞'}`);
    console.log(`–†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${systemCheck.marketData ? '‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' : '‚ùå –û—à–∏–±–∫–∞'}`);
    console.log(`CORS: ${systemCheck.cors ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –û—à–∏–±–∫–∞'}`);

    const allChecks = Object.values(systemCheck).every(check => check);
    
    if (allChecks) {
      console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
      console.log('‚úÖ HimkaPlastic EcoTrack –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
      console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
      console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
      console.log('2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –∞–¥–º–∏–Ω: admin@himkaplastic.ru / admin123');
      console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É');
      console.log('4. –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è');
    } else {
      console.log('\n‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í –°–ò–°–¢–ï–ú–ï');
      console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä—ã');
    }

  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:', error.message);
    console.log('\nüîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:');
    console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—â–µ–Ω—ã –æ–±–∞ —Å–µ—Ä–≤–µ—Ä–∞ (frontend –∏ backend)');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL');
    console.log('3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä—ã –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runIntegrationTests();

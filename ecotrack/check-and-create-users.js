// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcryptjs');

const prisma = new PrismaClient();

async function checkUsers() {
  try {
    console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await prisma.user.findMany({
      select: {
        id: true,
        email: true,
        name: true,
        isAdmin: true,
        companyName: true,
        createdAt: true
      }
    });
    
    console.log(`\n–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}\n`);
    
    users.forEach(user => {
      console.log(`üìß ${user.email}`);
      console.log(`üë§ ${user.name}`);
      console.log(`üè¢ ${user.companyName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
      console.log(`üëë –ê–¥–º–∏–Ω: ${user.isAdmin ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`üìÖ –°–æ–∑–¥–∞–Ω: ${user.createdAt.toLocaleString('ru-RU')}`);
      console.log('---');
    });

    // –ò—â–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const testUser = users.find(u => u.email === 'test@himkaplastic.ru');
    const adminUser = users.find(u => u.email === 'admin@himkaplastic.ru');

    console.log('\nüîç –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
    console.log(`test@himkaplastic.ru: ${testUser ? '‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}`);
    console.log(`admin@himkaplastic.ru: ${adminUser ? '‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}`);

    if (!testUser || !adminUser) {
      console.log('\nüîß –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
      
      if (!testUser) {
        const hashedPassword = await bcrypt.hash('123456', 12);
        await prisma.user.create({
          data: {
            email: 'test@himkaplastic.ru',
            name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            password: hashedPassword,
            companyName: '–û–û–û –¢–µ—Å—Ç',
            isAdmin: false
          }
        });
        console.log('‚úÖ –°–æ–∑–¥–∞–Ω test@himkaplastic.ru —Å –ø–∞—Ä–æ–ª–µ–º: 123456');
      }

      if (!adminUser) {
        const hashedPassword = await bcrypt.hash('admin123', 12);
        await prisma.user.create({
          data: {
            email: 'admin@himkaplastic.ru',
            name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            password: hashedPassword,
            companyName: '–•–∏–º–∫–∞–ü–ª–∞—Å—Ç–∏–∫',
            isAdmin: true
          }
        });
        console.log('‚úÖ –°–æ–∑–¥–∞–Ω admin@himkaplastic.ru —Å –ø–∞—Ä–æ–ª–µ–º: admin123');
      }
    }

    console.log('\nüéØ –ì–æ—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: test@himkaplastic.ru / 123456');
    console.log('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@himkaplastic.ru / admin123');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkUsers();

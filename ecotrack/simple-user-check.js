const { PrismaClient } = require('@prisma/client');

console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');

const prisma = new PrismaClient({
  log: ['error', 'warn'],
});

async function simpleCheck() {
  try {
    console.log('üì° –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    const users = await prisma.user.findMany({
      select: {
        email: true,
        name: true,
        isAdmin: true
      }
    });
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
    
    users.forEach((user, index) => {
      console.log(`${index + 1}. ${user.email} - ${user.name} ${user.isAdmin ? '(–ê–¥–º–∏–Ω)' : ''}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const testEmails = ['test@himkaplastic.ru', 'admin@himkaplastic.ru'];
    
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
    for (const email of testEmails) {
      const exists = users.find(u => u.email === email);
      console.log(`${email}: ${exists ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.message);
  } finally {
    await prisma.$disconnect();
    console.log('üîö –ó–∞–≤–µ—Ä—à–µ–Ω–æ');
  }
}

simpleCheck();

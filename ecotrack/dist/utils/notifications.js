"use strict";
/**
 * –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è HimkaPlastic EcoTrack
 * Email, SMS, Push, Telegram, WhatsApp —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —á–∞—Ç-–±–æ—Ç
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.notificationService = void 0;
const nodemailer_1 = __importDefault(require("nodemailer"));
class NotificationService {
    constructor() {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ email —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
        this.emailTransporter = nodemailer_1.default.createTransport({
            host: process.env.SMTP_HOST || 'smtp.yandex.ru',
            port: parseInt(process.env.SMTP_PORT || '587'),
            secure: false,
            auth: {
                user: process.env.SMTP_USER || 'noreply@himkaplastic.ru',
                pass: process.env.SMTP_PASS || 'your-smtp-password'
            }
        });
    }
    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    async sendEmailNotification(data) {
        try {
            const emailContent = this.generateEmailTemplate(data);
            await this.emailTransporter.sendMail({
                from: process.env.SMTP_FROM || '"–û–û–û –•–∏–º–∫–∞ –ü–ª–∞—Å—Ç–∏–∫" <noreply@himkaplastic.ru>',
                to: data.userEmail,
                subject: data.title,
                html: emailContent,
                text: data.message
            });
            console.log(`‚úÖ Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è –∑–∞–∫–∞–∑–∞ ${data.orderId}`);
            return true;
        }
        catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
            return false;
        }
    }
    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)
     */
    async sendSmsNotification(data) {
        try {
            // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å SMS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, SMSC.ru, SMS.ru)
            const smsText = this.generateSmsText(data);
            // –ó–∞–≥–ª—É—à–∫–∞ - –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ API SMS-–ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
            console.log(`üì± SMS –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ ${data.userPhone}: ${smsText}`);
            // –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞:
            // const response = await axios.post('https://smsc.ru/sys/send.php', {
            //   login: process.env.SMS_LOGIN,
            //   psw: process.env.SMS_PASSWORD,
            //   phones: data.userPhone,
            //   mes: smsText
            // });
            return true;
        }
        catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS:', error);
            return false;
        }
    }
    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (WebPush)
     */
    async sendPushNotification(data) {
        try {
            // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è WebPush —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            console.log(`üîî Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${data.userId}: ${data.message}`);
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–µ–±-push —Å–ª—É–∂–±–æ–π:
            // await webpush.sendNotification(subscription, JSON.stringify({
            //   title: data.title,
            //   body: data.message,
            //   orderId: data.orderId
            // }));
            return true;
        }
        catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Push:', error);
            return false;
        }
    }
    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
     */
    async sendOrderStatusNotification(orderId, status, userEmail, userPhone) {
        const statusMessages = {
            pending: '–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É',
            processing: '–í–∞—à –∑–∞–∫–∞–∑ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ',
            delivery: '–í–∞—à –∑–∞–∫–∞–∑ –ø–µ—Ä–µ–¥–∞–Ω –≤ –¥–æ—Å—Ç–∞–≤–∫—É',
            completed: '–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω',
            cancelled: '–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω'
        };
        const message = statusMessages[status] || `–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: ${status}`;
        const notificationData = {
            userId: '', // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ
            orderId,
            type: 'email',
            title: `–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ ‚Ññ${orderId}`,
            message,
            status,
            userEmail,
            userPhone,
            priority: 'medium',
            category: 'order'
        };
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ç–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        const notifications = [
            this.sendEmailNotification(notificationData),
            this.sendPushNotification({ ...notificationData, type: 'push' })
        ];
        if (userPhone) {
            notifications.push(this.sendSmsNotification({ ...notificationData, type: 'sms' }));
        }
        await Promise.allSettled(notifications);
    }
    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML —à–∞–±–ª–æ–Ω–∞ –¥–ª—è email
     */
    generateEmailTemplate(data) {
        return `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <title>${data.title}</title>
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: #2563eb; color: white; padding: 20px; text-align: center; }
          .content { padding: 20px; background: #f9f9f9; }
          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }
          .status-badge { display: inline-block; padding: 8px 16px; border-radius: 4px; font-weight: bold; }
          .status-processing { background: #3b82f6; color: white; }
          .status-delivery { background: #8b5cf6; color: white; }
          .status-completed { background: #10b981; color: white; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>–û–û–û ¬´–•–∏–º–∫–∞ –ü–ª–∞—Å—Ç–∏–∫¬ª</h1>
            <p>–°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—Ö–æ–¥–æ–≤ EcoTrack</p>
          </div>
          <div class="content">
            <h2>${data.title}</h2>
            <p>${data.message}</p>
            <p><strong>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</strong> ${data.orderId}</p>
            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span class="status-badge status-${data.status}">${data.status}</span></p>
            <p>–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–¥–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.</p>
          </div>
          <div class="footer">
            <p>¬© 2025 –û–û–û ¬´–•–∏–º–∫–∞ –ü–ª–∞—Å—Ç–∏–∫¬ª. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
            <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
          </div>
        </div>
      </body>
      </html>
    `;
    }
    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è SMS
     */
    generateSmsText(data) {
        return `–•–∏–º–∫–∞ –ü–ª–∞—Å—Ç–∏–∫: ${data.message}. –ó–∞–∫–∞–∑ ‚Ññ${data.orderId}. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.`;
    }
}
// –≠–∫—Å–ø–æ—Ä—Ç singleton —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
exports.notificationService = new NotificationService();

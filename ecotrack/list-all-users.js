const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function listAllUsers() {
    try {
        console.log('üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n');
        
        const users = await prisma.user.findMany({
            select: {
                id: true,
                email: true,
                name: true,
                isAdmin: true,
                role: true,
                companyName: true,
                createdAt: true
            },
            orderBy: {
                createdAt: 'asc'
            }
        });
        
        console.log(`–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}\n`);
        
        users.forEach((user, index) => {
            console.log(`${index + 1}. üìß ${user.email}`);
            console.log(`   üë§ ${user.name}`);
            console.log(`   üè¢ ${user.companyName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
            console.log(`   üëë –ê–¥–º–∏–Ω: ${user.isAdmin ? '–î–∞' : '–ù–µ—Ç'}`);
            console.log(`   üé≠ –†–æ–ª—å: ${user.role || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
            console.log(`   üìÖ –°–æ–∑–¥–∞–Ω: ${user.createdAt.toLocaleString('ru-RU')}`);
            console.log('   ---');
        });
        
        // –í—ã–¥–µ–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤
        const admins = users.filter(u => u.isAdmin || u.role === 'admin');
        console.log(`\nüëë –ù–∞–π–¥–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: ${admins.length}`);
        admins.forEach(admin => {
            console.log(`‚úÖ ${admin.email} - ${admin.name}`);
        });

        console.log('\nüîë –ì–æ—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
        console.log('admin@admin.com / admin123 (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ)');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    } finally {
        await prisma.$disconnect();
    }
}

listAllUsers();

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏ HimkaPlastic EcoTrack
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
 */

console.log('=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–û–ô –ü–ê–ù–ï–õ–ò ===');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
async function testAdminAPI() {
  const baseURL = 'http://localhost:3001/api';
  
  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç)
  const adminCredentials = {
    email: 'admin@himkaplastic.ru',
    password: 'admin123'
  };

  try {
    console.log('\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    
    const loginResponse = await fetch(`${baseURL}/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(adminCredentials)
    });

    if (!loginResponse.ok) {
      console.log('‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      console.log('‚ÑπÔ∏è  –°–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å —Ä–æ–ª—å—é admin');
      return;
    }

    const loginData = await loginResponse.json();
    const token = loginData.token;
    
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–∞');
    console.log(`Token: ${token.substring(0, 20)}...`);

    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    console.log('\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...');
    
    const analyticsResponse = await fetch(`${baseURL}/admin/analytics`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    if (analyticsResponse.ok) {
      const analytics = await analyticsResponse.json();
      console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(`–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: ${analytics.totalOrders || 0}`);
      console.log(`–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${analytics.activeUsers || 0}`);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏');
    }

    console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏...');
    
    const usersResponse = await fetch(`${baseURL}/admin/users`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    if (usersResponse.ok) {
      const users = await usersResponse.json();
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(`–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
      
      if (users.length > 0) {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
        users.slice(0, 3).forEach((user, index) => {
          console.log(`  ${index + 1}. ${user.name} (${user.email}) - —Ä–æ–ª—å: ${user.role}`);
        });
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    }

    console.log('\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è KPI...');
    
    const kpiResponse = await fetch(`${baseURL}/admin/kpi`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    if (kpiResponse.ok) {
      const kpi = await kpiResponse.json();
      console.log('‚úÖ KPI –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã');
      console.log(`KPI –º–µ—Ç—Ä–∏–∫: ${Object.keys(kpi).length}`);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è KPI –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π');
    }

    console.log('\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    console.log('\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
    console.log('1. –ó–∞–ø—É—â–µ–Ω –ª–∏ –±—ç–∫–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 3001');
    console.log('2. –°–æ–∑–¥–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é admin');
    console.log('3. –î–æ—Å—Ç—É–ø–Ω—ã –ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ—É—Ç—ã');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
async function checkServerStatus() {
  console.log('\n=== –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ï–†–í–ï–†–û–í ===');
  
  try {
    console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä–∞...');
    const backendResponse = await fetch('http://localhost:3001/api/status');
    
    if (backendResponse.ok) {
      console.log('‚úÖ –ë—ç–∫–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø–æ—Ä—Ç 3001)');
    } else {
      console.log('‚ö†Ô∏è  –ë—ç–∫–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã');
    }
  } catch (error) {
    console.log('‚ùå –ë—ç–∫–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ—Ä—Ç 3001)');
  }

  try {
    console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä–∞...');
    const frontendResponse = await fetch('http://localhost:3000');
    
    if (frontendResponse.ok) {
      console.log('‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø–æ—Ä—Ç 3000)');
    } else {
      console.log('‚ö†Ô∏è  –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã');
    }
  } catch (error) {
    console.log('‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ—Ä—Ç 3000)');
  }
}

// –°–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function listNewFeatures() {
  console.log('\n=== –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–õ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===');
  console.log('1. üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å (/admin)');
  console.log('   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ KPI –∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏');
  console.log('   - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º');
  console.log('   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Ä–æ–ª—è–º–∏');
  console.log('   - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è');
  console.log('   - –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
  
  console.log('\n2. üìä –î–∞—à–±–æ—Ä–¥ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (/dashboard?tab=analytics)');
  console.log('   - –ì—Ä–∞—Ñ–∏–∫ –æ–±—ä–µ–º–æ–≤ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏');
  console.log('   - –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç');
  console.log('   - –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤');
  console.log('   - –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤');
  
  console.log('\n3. üîî –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
  console.log('   - Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
  console.log('   - SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
  console.log('   - Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
  
  console.log('\n4. üí∞ –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ');
  console.log('   - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∏—Ä–∂–∞–º–∏ –≤—Ç–æ—Ä—Å—ã—Ä—å—è');
  console.log('   - –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ü–µ–Ω—ã –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã');
  console.log('   - –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞ (L_d = 70 —Ä—É–±/–∫–º)');
  
  console.log('\n5. üìã –ù–æ–≤—ã–µ —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤');
  console.log('   - "processing" (–û–±—Ä–∞–±–æ—Ç–∫–∞)');
  console.log('   - "delivery" (–î–æ—Å—Ç–∞–≤–∫–∞)');
  console.log('   - "cancelled" (–û—Ç–º–µ–Ω—ë–Ω)');
  
  console.log('\n=== –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –í–´–ü–û–õ–ù–ò–¢–ï ===');
  console.log('1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');
  console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ /admin –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π');
  console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ /dashboard?tab=analytics –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤');
  console.log('4. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
  console.log('5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runTests() {
  listNewFeatures();
  await checkServerStatus();
  
  // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º API
  setTimeout(async () => {
    await testAdminAPI();
  }, 2000);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runTests();
